/*
 * Blockchain.com Exchange REST API
 *
 * ## Introduction Welcome to Blockchain.com's Exchange API and developer documentation. These documents detail and give examples of various functionality offered by the API such as receiving real time market data, requesting balance information and performing trades. ## To Get Started Create or log into your existing Blockchain.com Exchange account Select API from the drop down menu Fill out form and click “Create New API Key Now” Once generated you can view your keys under API Settings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderSummary {
    /// The unique order id assigned by the exchange
    #[serde(rename = "exOrdId", skip_serializing_if = "Option::is_none")]
    pub ex_ord_id: Option<i64>,
    /// Reference field provided by client and cannot exceed 20 characters
    #[serde(rename = "clOrdId")]
    pub cl_ord_id: String,
    #[serde(rename = "ordStatus")]
    pub ord_status: crate::models::OrderStatus,
    #[serde(rename = "side")]
    pub side: crate::models::Side,
    /// The limit price for the order
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<f64>,
    /// The reason for rejecting the order, if applicable
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    /// Blockchain symbol identifier
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// The executed quantity for the order's last fill
    #[serde(rename = "lastShares", skip_serializing_if = "Option::is_none")]
    pub last_shares: Option<f64>,
    /// The executed price for the last fill
    #[serde(rename = "lastPx", skip_serializing_if = "Option::is_none")]
    pub last_px: Option<f64>,
    /// For Open and Partially Filled orders this is the remaining quantity open for execution. For Canceled and Expired orders this is the quantity than was still open before cancellation/expiration. For Rejected order this is equal to orderQty. For other states this is always zero.
    #[serde(rename = "leavesQty", skip_serializing_if = "Option::is_none")]
    pub leaves_qty: Option<f64>,
    /// The quantity of the order which has been filled
    #[serde(rename = "cumQty", skip_serializing_if = "Option::is_none")]
    pub cum_qty: Option<f64>,
    /// Calculated the Volume Weighted Average Price of all fills for this order
    #[serde(rename = "avgPx", skip_serializing_if = "Option::is_none")]
    pub avg_px: Option<f64>,
    /// Time in ms since 01/01/1970 (epoch)
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
}

impl OrderSummary {
    pub fn new(cl_ord_id: String, ord_status: crate::models::OrderStatus, side: crate::models::Side, symbol: String) -> OrderSummary {
        OrderSummary {
            ex_ord_id: None,
            cl_ord_id,
            ord_status,
            side,
            price: None,
            text: None,
            symbol,
            last_shares: None,
            last_px: None,
            leaves_qty: None,
            cum_qty: None,
            avg_px: None,
            timestamp: None,
        }
    }
}


