/**
* Blockchain.com Exchange REST API
* ## Introduction Welcome to Blockchain.com's Exchange API and developer documentation. These documents detail and give examples of various functionality offered by the API such as receiving real time market data, requesting balance information and performing trades. ## To Get Started Create or log into your existing Blockchain.com Exchange account Select API from the drop down menu Fill out form and click “Create New API Key Now” Once generated you can view your keys under API Settings 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.blockchain.exchange.rest.model

import com.blockchain.exchange.rest.model.OrdType
import com.blockchain.exchange.rest.model.OrderStatus
import com.blockchain.exchange.rest.model.Side

import com.squareup.moshi.Json
/**
 * 
 * @param clOrdId Reference field provided by client and cannot exceed 20 characters
 * @param ordType 
 * @param ordStatus 
 * @param side 
 * @param symbol Blockchain symbol identifier
 * @param exOrdId The unique order id assigned by the exchange
 * @param price The limit price for the order
 * @param text The reason for rejecting the order, if applicable
 * @param lastShares The executed quantity for the order's last fill
 * @param lastPx The executed price for the last fill
 * @param leavesQty For Open and Partially Filled orders this is the remaining quantity open for execution. For Canceled and Expired orders this is the quantity than was still open before cancellation/expiration. For Rejected order this is equal to orderQty. For other states this is always zero.
 * @param cumQty The quantity of the order which has been filled
 * @param avgPx Calculated the Volume Weighted Average Price of all fills for this order
 * @param timestamp Time in ms since 01/01/1970 (epoch)
 */

data class OrderSummary (
    /* Reference field provided by client and cannot exceed 20 characters */
    @Json(name = "clOrdId")
    val clOrdId: kotlin.String,
    @Json(name = "ordType")
    val ordType: OrdType,
    @Json(name = "ordStatus")
    val ordStatus: OrderStatus,
    @Json(name = "side")
    val side: Side,
    /* Blockchain symbol identifier */
    @Json(name = "symbol")
    val symbol: kotlin.String,
    /* The unique order id assigned by the exchange */
    @Json(name = "exOrdId")
    val exOrdId: kotlin.Long? = null,
    /* The limit price for the order */
    @Json(name = "price")
    val price: kotlin.Double? = null,
    /* The reason for rejecting the order, if applicable */
    @Json(name = "text")
    val text: kotlin.String? = null,
    /* The executed quantity for the order's last fill */
    @Json(name = "lastShares")
    val lastShares: kotlin.Double? = null,
    /* The executed price for the last fill */
    @Json(name = "lastPx")
    val lastPx: kotlin.Double? = null,
    /* For Open and Partially Filled orders this is the remaining quantity open for execution. For Canceled and Expired orders this is the quantity than was still open before cancellation/expiration. For Rejected order this is equal to orderQty. For other states this is always zero. */
    @Json(name = "leavesQty")
    val leavesQty: kotlin.Double? = null,
    /* The quantity of the order which has been filled */
    @Json(name = "cumQty")
    val cumQty: kotlin.Double? = null,
    /* Calculated the Volume Weighted Average Price of all fills for this order */
    @Json(name = "avgPx")
    val avgPx: kotlin.Double? = null,
    /* Time in ms since 01/01/1970 (epoch) */
    @Json(name = "timestamp")
    val timestamp: kotlin.Long? = null
)

