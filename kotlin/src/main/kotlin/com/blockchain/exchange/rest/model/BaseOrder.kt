/**
* Blockchain.com Exchange REST API
* ## Introduction Welcome to Blockchain.com's Exchange API and developer documentation. These documents detail and give examples of various functionality offered by the API such as receiving real time market data, requesting balance information and performing trades. ## To Get Started Create or log into your existing Blockchain.com Exchange account Select API from the drop down menu Fill out form and click “Create New API Key Now” Once generated you can view your keys under API Settings 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.blockchain.exchange.rest.model

import com.blockchain.exchange.rest.model.Side
import com.blockchain.exchange.rest.model.TimeInForce

import com.squareup.moshi.Json
/**
 * 
 * @param clOrdId Reference field provided by client and cannot exceed 20 characters
 * @param symbol Blockchain symbol identifier
 * @param side 
 * @param orderQty The order size in the terms of the base currency
 * @param ordType 
 * @param timeInForce 
 * @param price The limit price for the order
 * @param expireDate expiry date in the format YYYYMMDD
 * @param minQty The minimum quantity required for an IOC fill
 * @param stopPx The limit price for the order
 */

data class BaseOrder (
    /* Reference field provided by client and cannot exceed 20 characters */
    @Json(name = "clOrdId")
    val clOrdId: kotlin.String,
    /* Blockchain symbol identifier */
    @Json(name = "symbol")
    val symbol: kotlin.String,
    @Json(name = "side")
    val side: Side,
    /* The order size in the terms of the base currency */
    @Json(name = "orderQty")
    val orderQty: kotlin.Double,
    @Json(name = "ordType")
    val ordType: BaseOrder.OrdType? = null,
    @Json(name = "timeInForce")
    val timeInForce: TimeInForce? = null,
    /* The limit price for the order */
    @Json(name = "price")
    val price: kotlin.Double? = null,
    /* expiry date in the format YYYYMMDD */
    @Json(name = "expireDate")
    val expireDate: kotlin.Int? = null,
    /* The minimum quantity required for an IOC fill */
    @Json(name = "minQty")
    val minQty: kotlin.Double? = null,
    /* The limit price for the order */
    @Json(name = "stopPx")
    val stopPx: kotlin.Double? = null
) {

    /**
    * 
    * Values: MARKET,LIMIT,STOP,STOPLIMIT
    */
    
    enum class OrdType(val value: kotlin.String){
        @Json(name = "MARKET") MARKET("MARKET"),
        @Json(name = "LIMIT") LIMIT("LIMIT"),
        @Json(name = "STOP") STOP("STOP"),
        @Json(name = "STOPLIMIT") STOPLIMIT("STOPLIMIT");
    }
}

