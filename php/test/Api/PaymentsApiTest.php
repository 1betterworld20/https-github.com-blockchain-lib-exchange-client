<?php
/**
 * PaymentsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  com.blockchain.exchange.rest
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Blockchain.com Exchange REST API
 *
 * ## Introduction Welcome to Blockchain.com's Exchange API and developer documentation. \\ These documents detail and give examples of various functionality offered by the API such as receiving real time market data, requesting balance information and performing trades. ## To Get Started Create or log into your existing Blockchain.com Exchange account \\ Select API from the drop down menu \\ Fill out form and click “Create New API Key Now” \\ Once generated you can view your keys under API Settings. \\ Please be aware that the API key can only be used once it was verified via email.  The API key must be set via the \\ `X-API-Token`\\ header.  The base URL to be used for all calls is \\ `https://api.blockchain.com/v3/exchange`  Autogenerated clients for this API can be found [here](https://github.com/blockchain/lib-exchange-client).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace com.blockchain.exchange.rest;

use \com.blockchain.exchange.rest\Configuration;
use \com.blockchain.exchange.rest\ApiException;
use \com.blockchain.exchange.rest\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PaymentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  com.blockchain.exchange.rest
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PaymentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createWithdrawal
     *
     * Request a withdrawal.
     *
     */
    public function testCreateWithdrawal()
    {
    }

    /**
     * Test case for getAccountByTypeAndCurrency
     *
     * Receive current account balances.
     *
     */
    public function testGetAccountByTypeAndCurrency()
    {
    }

    /**
     * Test case for getAccounts
     *
     * Receive current account balances.
     *
     */
    public function testGetAccounts()
    {
    }

    /**
     * Test case for getDepositAddress
     *
     * Get a deposit address. Currently only crypto currencies are supported.
     *
     */
    public function testGetDepositAddress()
    {
    }

    /**
     * Test case for getDepositById
     *
     * Get status about a deposit.
     *
     */
    public function testGetDepositById()
    {
    }

    /**
     * Test case for getDeposits
     *
     * Get a list of deposits.
     *
     */
    public function testGetDeposits()
    {
    }

    /**
     * Test case for getWhitelist
     *
     * Get a list of all whitelisted withdrawal accounts.
     *
     */
    public function testGetWhitelist()
    {
    }

    /**
     * Test case for getWhitelistByCurrency
     *
     * Get a list of all whitelisted withdrawal accounts.
     *
     */
    public function testGetWhitelistByCurrency()
    {
    }

    /**
     * Test case for getWithdrawalById
     *
     * Get status about a withdrawal.
     *
     */
    public function testGetWithdrawalById()
    {
    }

    /**
     * Test case for getWithdrawals
     *
     * Get a list of withdrawals.
     *
     */
    public function testGetWithdrawals()
    {
    }
}
