/* 
 * Blockchain.com Exchange REST API
 *
 * ## Introduction Welcome to Blockchain.com's Exchange API and developer documentation. These documents detail and give examples of various functionality offered by the API such as receiving real time market data, requesting balance information and performing trades. ## To Get Started Create or log into your existing Blockchain.com Exchange account Select API from the drop down menu Fill out form and click “Create New API Key Now” Once generated you can view your keys under API Settings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.com.blockchain.exchange.rest.api;
using Org.OpenAPITools.com.blockchain.exchange.rest.model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing BaseOrder
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BaseOrderTests
    {
        // TODO uncomment below to declare an instance variable for BaseOrder
        //private BaseOrder instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of BaseOrder
            //instance = new BaseOrder();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BaseOrder
        /// </summary>
        [Test]
        public void BaseOrderInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" BaseOrder
            //Assert.IsInstanceOf(typeof(BaseOrder), instance);
        }


        /// <summary>
        /// Test the property 'ClOrdId'
        /// </summary>
        [Test]
        public void ClOrdIdTest()
        {
            // TODO unit test for the property 'ClOrdId'
        }
        /// <summary>
        /// Test the property 'OrdType'
        /// </summary>
        [Test]
        public void OrdTypeTest()
        {
            // TODO unit test for the property 'OrdType'
        }
        /// <summary>
        /// Test the property 'Symbol'
        /// </summary>
        [Test]
        public void SymbolTest()
        {
            // TODO unit test for the property 'Symbol'
        }
        /// <summary>
        /// Test the property 'Side'
        /// </summary>
        [Test]
        public void SideTest()
        {
            // TODO unit test for the property 'Side'
        }
        /// <summary>
        /// Test the property 'OrderQty'
        /// </summary>
        [Test]
        public void OrderQtyTest()
        {
            // TODO unit test for the property 'OrderQty'
        }
        /// <summary>
        /// Test the property 'TimeInForce'
        /// </summary>
        [Test]
        public void TimeInForceTest()
        {
            // TODO unit test for the property 'TimeInForce'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Test]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'ExpireDate'
        /// </summary>
        [Test]
        public void ExpireDateTest()
        {
            // TODO unit test for the property 'ExpireDate'
        }
        /// <summary>
        /// Test the property 'MinQty'
        /// </summary>
        [Test]
        public void MinQtyTest()
        {
            // TODO unit test for the property 'MinQty'
        }
        /// <summary>
        /// Test the property 'StopPx'
        /// </summary>
        [Test]
        public void StopPxTest()
        {
            // TODO unit test for the property 'StopPx'
        }

    }

}
